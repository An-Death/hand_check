Help по скрипту назначения ручных проверок.
version 0.1

Прототип скрипта:

Список основных модулей:
get_supporters from calendar_parcer.py
get_projects from dbconnect.py
get_problems from hand_check_parcer.py
update_table from dbconnect.py
source.py

Не реализованны:
    HandCheckBot from bot
    SendMail from mail
    HandCheckManual config from ???



1 часть

source.py
Храним глобальные переменные.
    SCOPES - ссылка на API
    CLIENT_SECRET_FILE - json для аутентификации на Google.
    APPLICATION_NAME - имя зарегистрированного скрипта на акаунте Google
    CALENDARS - основнй список календарей для парсинга. Хранится в tuple вместе с digit для сортировки
    JSLIST - json со списком всех доступных календарей и их соновных полей. Используется для парсинга. Обновляется раз в месяц.
    LG_LIST - large grade list - Лист для людей на испытательном скроке. Если такие есть, все ручные проверки на спене назначаются на них.
    LOG_FILE - Путь до файла для записи логов.

calendar_parcer
Создание листа пользователей из календарей.
Подключаемся к гугл календарю, достаём список календарей, храним в calendars.json
Раз в месяц или если фаил удалён, создаём новый calendar.json

    get_supporters():
    Парсим из файла айдишники календарей для составления дикта с сапортерами в стиле :
    день :
    ночь :
    отпуск :
    Возвращаем данный дикт дальше.
    (возможно доработка с парсингом описания события по regex "Командирвка, болеет/заболел/отгул и тд."


2 часть

Сортировка пользователей из листа на основании принадлежности их к той или иной смене.
Так же учет принадлежности пользователей к группе "испытательный срок"
Соответственно группа:
   99 - Испыт скрок - наивысший приоритет. Все ручные проверки текущей смены.
    3 - 24/7 - высокий. 50/50 проверок текущей смены.
    2 - 2/2 - средний.
    1 - 5/2 - низкий.
Средний и низкий - распределение ручных проверок по кругу между всеми участниками групп. Но только в случае если в трёх группах выше пусто.

3 часть

Работа с базой.

Привязка саппортеров по почте к id в mantis_user_table
Парсинг таблицы mantis_project_check_table на need и смены день/ночь
Распределение проектов по саппортерам, контроль времени/даты.
Апдейт таблицы.
Логирование.

4 часть

Отправка писем:

При назначении откравка списка проектов человеку.
При просрочке отправка проекта человеку
При просрочке более 3х дней - отправка мне, максу
при отсутствии человека в смене для назначения - отправка в почту мне, максу (отправка в телеграм)
апи для работы со скриптом через телеграм Х_Х

5 часть

Телеграм бот для оповещения о проблемах
Возможно доработка с возможностью распределять РП через бота.
Получать рассписание, список людей на смене, список проектов и тд.